---
name: Deploy to AWS EC2 via Docker (using Docker Hub)

on:
  push:
    branches:
      - deploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Docker Hub 로그인
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Docker 이미지 빌드 및 태깅
      - name: Build Docker image
        run: |
          docker build -t my-app .
          docker tag my-app:latest ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}

      # Docker 이미지 Docker Hub로 푸시
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}

      # EC2 인스턴스에 SSH 접속하여 컨테이너 업데이트 수행
      - name: Deploy Docker container on EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 기존 컨테이너 종료 및 삭제 (실행 중이 아니라면 무시)
            docker stop my-app || true
            docker rm my-app || true

            # 기존 이미지 삭제
            echo "Deleting all images in repository my-app..."
            docker images --filter=reference="${{ secrets.DOCKER_USERNAME }}/my-app" -q | xargs -r docker rmi -f

            # Docker Hub에서 최신 이미지 pull
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}

            # 새로운 컨테이너 실행 (필요에 따라 포트 매핑, 환경변수 등 추가)
            docker run -d \
              --name my-app \
              -p 8000:8000 \
              ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}
