{"timestamp":"2025-05-06T15:39:46.572112","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-06T15:39:46.572653","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/retrain_model_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-06T15:39:46.605165Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-06T15:39:46.605629Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-06T15:39:46.605850Z","level":"info","event":"Current task name:reset_bad_count_task","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-06T15:39:46.606025Z","level":"info","event":"Dag name:retrain_model_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-06T15:39:46.606200Z","level":"info","event":"ðŸ”„ retrain í›„ bad_count ë¦¬ì…‹","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-06T15:39:46.606385Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-06T15:39:46.606567Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-06T15:39:46.606735Z","level":"info","event":"Task operator:<Task(PythonOperator): reset_bad_count_task>","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-06T15:39:46.590117","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/variable.py:204: DeprecationWarning: Using Variable.set from `airflow.models` is deprecated.Please use `from airflow.sdk import Variable` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-05-06T15:39:46.591170","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-06T15:39:46.591436","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
